<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BandReportWizardDescription" xml:space="preserve">
    <value>Führt euch durch die Erstellung eines Band-Reports.</value>
  </data>
  <data name="BandReportWizardName" xml:space="preserve">
    <value>Bandbericht Wizard</value>
  </data>
  <data name="BandWizard_AdjustItemsOption" xml:space="preserve">
    <value>Berichtsgegenstände anpassen, um Platz zu passen</value>
  </data>
  <data name="BandWizard_AvailableLayouts" xml:space="preserve">
    <value>Verfügbare Layouts:</value>
  </data>
  <data name="BandWizard_Builder_GrandTotal" xml:space="preserve">
    <value>gesamtsumme:</value>
  </data>
  <data name="BandWizard_Builder_SubTotal" xml:space="preserve">
    <value>Sub-total:</value>
  </data>
  <data name="BandWizard_GenerateTotalsOption" xml:space="preserve">
    <value>Generieren Sie Unter-und Großsummen</value>
  </data>
  <data name="BandWizard_PageSettings" xml:space="preserve">
    <value>Seiteneinstellungen</value>
  </data>
  <data name="BlankReportWizardDescription" xml:space="preserve">
    <value>Erstellt einen leeren Bericht, so dass Sie damit beginnen können, ihn von Grund auf zu bauen.</value>
  </data>
  <data name="BlankReportWizardName" xml:space="preserve">
    <value>Blanker Bericht</value>
  </data>
  <data name="BuildReportTransactionText" xml:space="preserve">
    <value>Bericht erstellen</value>
  </data>
  <data name="ChooseReportLayout" xml:space="preserve">
    <value>Wählen Sie das Layout des Berichts</value>
  </data>
  <data name="ChoroplethReportWizardDescription" xml:space="preserve">
    <value>Zeigt die Daten als Karte mit thematisch gefärbten Flächen an.</value>
  </data>
  <data name="ChoroplethReportWizardName" xml:space="preserve">
    <value>Choropleth Assistent</value>
  </data>
  <data name="CrosstabReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung eines Crosstab-Berichts.</value>
  </data>
  <data name="CrosstabReportWizardName" xml:space="preserve">
    <value>Crosstab Wizard</value>
  </data>
  <data name="DataSourceFieldMappingWizardName" xml:space="preserve">
    <value>Daten-Quelle-Feld-Mapping-Assistent</value>
  </data>
  <data name="DataSourceWizardTransactionName" xml:space="preserve">
    <value>Data Source Wizard</value>
  </data>
  <data name="FieldMappings_DataSourceFields" xml:space="preserve">
    <value>Datenquellen</value>
  </data>
  <data name="FieldMappings_TemplateFields" xml:space="preserve">
    <value>Vorlagen</value>
  </data>
  <data name="GraphReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung einer Vielzahl von Charts.</value>
  </data>
  <data name="GraphReportWizardName" xml:space="preserve">
    <value>Graph Wizard</value>
  </data>
  <data name="ImportReportWizardDescription" xml:space="preserve">
    <value>Startet den Import-Report-Assistenten für die Konvertierung eines Berichts aus einem anderen Berichtsformat.</value>
  </data>
  <data name="ImportReportWizardName" xml:space="preserve">
    <value>Import-Report-Assistenten</value>
  </data>
  <data name="InvoiceReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung eines Rechnungsberichts.</value>
  </data>
  <data name="InvoiceReportWizardName" xml:space="preserve">
    <value>Rechnungsbericht Wizard</value>
  </data>
  <data name="LabelReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung eines Label-Berichts.</value>
  </data>
  <data name="LabelReportWizardName" xml:space="preserve">
    <value>Etikettenbericht Wizard</value>
  </data>
  <data name="LeftAlignedLayoutDesc" xml:space="preserve">
    <value>Das Layout der linken Ausgleichung platziert die Elemente in jedem Abschnitt, die vom Anfang des Abschnitts an beginnen.</value>
  </data>
  <data name="LeftAlignedLayoutName" xml:space="preserve">
    <value>Linke ausgerichtet</value>
  </data>
  <data name="MapReportWizardDescription" xml:space="preserve">
    <value>Zeigt die Daten vor einem geographischen Hintergrund an.</value>
  </data>
  <data name="MapReportWizardName" xml:space="preserve">
    <value>Map Wizard</value>
  </data>
  <data name="OutlineLayoutDesc" xml:space="preserve">
    <value>Das Umrisslayout ordnet die Elemente von links nach rechts an, wobei die Gegenstände jeder Gruppe durch einen festen Offset weiter nach rechts gehen.</value>
  </data>
  <data name="OutlineLayoutName" xml:space="preserve">
    <value>Kontur</value>
  </data>
  <data name="ProductCatalogReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung eines Produktkatalog-Berichts</value>
  </data>
  <data name="ProductCatalogReportWizardName" xml:space="preserve">
    <value>Produktkatalog-Reportassistent</value>
  </data>
  <data name="ReportWizardTransactionName" xml:space="preserve">
    <value>Initialisieren Sie einen neuen Bandbericht.</value>
  </data>
  <data name="SteppedLayoutDesc" xml:space="preserve">
    <value>Das gestufte Layout ordnet die Elemente in Spalten so an, dass sie sich nicht vertikal überschneiden.</value>
  </data>
  <data name="SteppedLayoutName" xml:space="preserve">
    <value>Trat</value>
  </data>
  <data name="TableReportWizardDescription" xml:space="preserve">
    <value>Führt Sie durch die Erstellung eines Tabellenberichts.</value>
  </data>
  <data name="TableReportWizardName" xml:space="preserve">
    <value>Tabellenassistent</value>
  </data>
</root>